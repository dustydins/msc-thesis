@MISC{pypl,
  author = {Carbonelle, Pierre},
  title = {PYPL PopularitY of Programming Language index},
  url = {https://pypl.github.io/PYPL.html},
  year = {2021},
  organization = {Github.io}
}

@misc{redmonk,
    title={The RedMonk Programming Language Rankings: January 2021},
    url={https://redmonk.com/sogrady/2021/03/01/language-rankings-1-21/},
    journal={tecosystems},
    author={O'Grady, Stephen},
    year={2021},
    month={Mar}}

@misc{opensource,
author = {Benson, Deepu},
title = {10 most popular programming languages - Open Source For You},
howpublished = {\url{https://www.opensourceforu.com/2017/03/most-popular-programming-languages/}},
month = {Mar},
year = {2017},
note = {(Accessed on 03/09/2021)}
}

@misc{ieee-spectrum,
author = {Diakopoulous, N. and Bagavandas, M. and Singh, G. and Kulkarni, P.},
title = {Interactive: The Top Programming Languages 2020 - IEEE Spectrum},
howpublished = {\url{https://spectrum.ieee.org/static/interactive-the-top-programming-languages-2020}},
month = {Aug},
year = {2020},
note = {(Accessed on 03/09/2021)}
}

@misc{tiobe,
author = {Jansen, P.},
title = {index | TIOBE - The Software Quality Company},
howpublished = {\url{https://www.tiobe.com/tiobe-index/?20210304%20%20%20%20%20%20}},
month = {Mar},
year = {2021},
note = {(Accessed on 03/09/2021)}
}

@misc{whatispython,
author = {Python},
title = {What is Python? Executive Summary | Python.org},
howpublished = {\url{https://www.python.org/doc/essays/blurb/}},
month = {Mar},
year = {2021},
note = {(Accessed on 03/10/2021)}
}

@article{amodei,
  author    = {Dario Amodei and
               Chris Olah and
               Jacob Steinhardt and
               Paul F. Christiano and
               John Schulman and
               Dan Man{\'{e}}},
  title     = {Concrete Problems in {AI} Safety},
  journal   = {CoRR},
  volume    = {abs/1606.06565},
  year      = {2016},
  url       = {http://arxiv.org/abs/1606.06565},
  archivePrefix = {arXiv},
  eprint    = {1606.06565},
  timestamp = {Mon, 13 Aug 2018 16:48:59 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/AmodeiOSCSM16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@Article{pereira,
AUTHOR = {Pereira, Ana and Thomas, Carsten},
TITLE = {Challenges of Machine Learning Applied to Safety-Critical Cyber-Physical Systems},
JOURNAL = {Machine Learning and Knowledge Extraction},
VOLUME = {2},
YEAR = {2020},
NUMBER = {4},
PAGES = {579--602},
URL = {https://www.mdpi.com/2504-4990/2/4/31},
ISSN = {2504-4990},
ABSTRACT = {Machine Learning (ML) is increasingly applied for the control of safety-critical Cyber-Physical Systems (CPS) in application areas that cannot easily be mastered with traditional control approaches, such as autonomous driving. As a consequence, the safety of machine learning became a focus area for research in recent years. Despite very considerable advances in selected areas related to machine learning safety, shortcomings were identified on holistic approaches that take an end-to-end view on the risks associated to the engineering of ML-based control systems and their certification. Applying a classic technique of safety engineering, our paper provides a comprehensive and methodological analysis of the safety hazards that could be introduced along the ML lifecycle, and could compromise the safe operation of ML-based CPS. Identified hazards are illustrated and explained using a real-world application scenario&mdash;an autonomous shop-floor transportation vehicle. The comprehensive analysis presented in this paper is intended as a basis for future holistic approaches for safety engineering of ML-based CPS in safety-critical applications, and aims to support the focus on research onto safety hazards that are not yet adequately addressed.},
DOI = {10.3390/make2040031}
}

@inbook{bishop,
author = {Bishop, Christopher},
year = {2006},
month = {01},
pages = {140-155},
title = {Pattern Recognition and Machine Learning},
volume = {16},
journal = {Journal of Electronic Imaging},
doi = {10.1117/1.2819119}
}

@article{goodfellow,
author = {Goodfellow, Ian and Shlens, Jonathon and Szegedy, Christian},
year = {2014},
month = {12},
pages = {},
title = {Explaining and Harnessing Adversarial Examples},
journal = {arXiv 1412.6572}
}

@misc{brown2018,
      title={Adversarial Patch}, 
      author={Tom B. Brown and Dandelion Mané and Aurko Roy and Martín Abadi and Justin Gilmer},
      year={2018},
      eprint={1712.09665},
      archivePrefix={arXiv},
      primaryClass={cs.CV}
}

@misc{zhang2019,
      title={Machine Learning Testing: Survey, Landscapes and Horizons}, 
      author={Jie M. Zhang and Mark Harman and Lei Ma and Yang Liu},
      year={2019},
      eprint={1906.10742},
      archivePrefix={arXiv},
      primaryClass={cs.LG}
}

@book{molnar2019,
  title      = {Interpretable Machine Learning},
  author     = {Christoph Molnar},
  note       = {\url{https://christophm.github.io/interpretable-ml-book/}},
  year       = {2019},
  subtitle   = {A Guide for Making Black Box Models Explainable}
}

@inproceedings{ammann2008,
  title={Introduction to Software Testing},
  author={P. Ammann and A. J. Offutt},
  year={2008}
}

@misc{russell2016,
      title={Research Priorities for Robust and Beneficial Artificial Intelligence}, 
      author={Stuart Russell and Daniel Dewey and Max Tegmark},
      year={2016},
      eprint={1602.03506},
      archivePrefix={arXiv},
      primaryClass={cs.AI}
}

TY  - JOUR
AU  - Lomuscio, Alessio
AU  - Qu, Hongyang
AU  - Raimondi, Franco
PY  - 2017
DA  - 2017/02/01
TI  - MCMAS: an open-source model checker for the verification of multi-agent systems
JO  - International Journal on Software Tools for Technology Transfer
SP  - 9
EP  - 30
VL  - 19
IS  - 1
AB  - We present MCMAS, a model checker for the verification of multi-agent systems. MCMAS supports efficient symbolic techniques for the verification of multi-agent systems against specifications representing temporal, epistemic and strategic properties. We present the underlying semantics of the specification language supported and the algorithms implemented in MCMAS, including its fairness and counterexample generation features. We provide a detailed description of the implementation. We illustrate its use by discussing a number of examples and evaluate its performance by comparing it against other model checkers for multi-agent systems on a common case study.
SN  - 1433-2787
UR  - https://doi.org/10.1007/s10009-015-0378-x
DO  - 10.1007/s10009-015-0378-x
ID  - Lomuscio2017
ER  - 
@misc{lomuscio2017,
    title={MCMAS: an open-source model checker for the verification of multi-agent systems},
    author={Lomuscio, Alessio and Qu, Hongyang and Raimondi, Franco},
    year={2017},
    journal={International Journal on Software Tools for Technology Transfer},
    url={\url{https://doi.org/10.1007/s10009-015-0378-x}}
}

@misc{lomuscio2017approach,
      title={An approach to reachability analysis for feed-forward ReLU neural networks}, 
      author={Alessio Lomuscio and Lalit Maganti},
      year={2017},
      eprint={1706.07351},
      archivePrefix={arXiv},
      primaryClass={cs.AI}
}

@article{kouvaros2016,
author = {Kouvaros, Panagiotis and Lomuscio, Alessio},
title = {Parameterised Verification for Multi-Agent Systems},
year = {2016},
issue_date = {May 2016},
publisher = {Elsevier Science Publishers Ltd.},
address = {GBR},
volume = {234},
number = {C},
issn = {0004-3702},
url = {https://doi.org/10.1016/j.artint.2016.01.008},
doi = {10.1016/j.artint.2016.01.008},
abstract = {We study the problem of verifying role-based multi-agent systems, where the number of components cannot be determined at design time. We give a semantics that captures parameterised, generic multi-agent systems and identify three notable classes that represent different ways in which the agents may interact among themselves and with the environment. While the verification problem is undecidable in general we put forward cutoff procedures for the classes identified. The methodology is based on the existence of a notion of simulation between the templates for the agents and the template for the environment in the system. We show that the cutoff identification procedures as well as the general algorithms that we propose are sound; for one class we show the decidability of the verification problem and present a complete cutoff procedure. We report experimental results obtained on MCMAS-P, a novel model checker implementing the parameterised model checking methodologies here devised.},
journal = {Artif. Intell.},
month = may,
pages = {152–189},
numpages = {38},
keywords = {Cutoffs, Validation, Parameterised verification, Multi-agent systems}
}

@article{polak1979,
  title={An exercise in automatic program verification},
  author={Polak, Wolfgang},
  journal={IEEE Transactions on Software Engineering},
  number={5},
  pages={453--458},
  year={1979},
  publisher={IEEE}
}

@InProceedings{boyer1990,
author="Boyer, Robert S.
and Moore, J. Strother",
editor="Stickel, Mark E.",
title="A theorem prover for a computational logic",
booktitle="10th International Conference on Automated Deduction",
year="1990",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="1--15",
abstract="We briefly review a mechanical theorem-prover for a logic of recursive functions over finitely generated objects including the integers, ordered pairs, and symbols. The prover, known both as NQTHM and as the Boyer-Moore prover, contains a mechanized principle of induction and implementations of linear resolution, rewriting, and arithmetic decision procedures. We describe some applications of the prover, including a proof of the correct implementation of a higher level language on a microprocessor defined at the gate level. We also describe the ongoing project of recoding the entire prover as an applicative function within its own logic.",
isbn="978-3-540-47171-4"
}

@misc{kokke2020,
    title={A library for translating TensorFlow models to Z3},
    year={2020},
    author={Kokke, Wen},
    url={https://github.com/wenkokke/sapphire},
}

@InProceedings{guaspari1993,
author="Guaspari, David
and Marceau, Carla
and Polak, Wolfgang",
editor="Martin, Ursula
and Wing, Jeannette M.",
title="Formal Verification of Ada Programs",
booktitle="First International Workshop on Larch",
year="1993",
publisher="Springer London",
address="London",
pages="104--141",
abstract="This paper describes the Penelope verification editor and its formal basis. Penelope is a prototype system for the interactive development and verification of programs that are written in a rich subset of sequential Ada.",
isbn="978-1-4471-3558-6"
}

